local http_request = http_request;
if syn then
    http_request = syn.request
end
local body = http_request({Url = 'https://httpbin.org/get'; Method = 'GET'}).Body;
local decoded = game:GetService('HttpService'):JSONDecode(body)
local hwid_list = {"Syn-Fingerprint", "Exploit-Guid"};
for i, v in next, hwid_list do
    if decoded.headers[v] then
        hwid = decoded.headers[v];
        break
    end
end
if hwid then
    API_KEY = "vui2e5tlDzyJhgX03V1M"; -- Set Public API Key
    local auth = http_request({Url = 'https://yaris.rocks/access/?apikey='..API_KEY..'&hwid='..hwid; Method = 'GET'});
    if auth.StatusCode == 200 then
       print('User is Authorized');
       
local DiscordLib = loadstring(game:HttpGet"https://raw.githubusercontent.com/dawid-scripts/UI-Libs/main/discord%20lib.txt")()

local win = DiscordLib:Window("Sword script made by noam chomsky")

local serv = win:Server("Sword script", "")

local btns = serv:Channel("Main")

btns:Button("Kill all", function()
    
    	--// Setting \\--
	local range = 1000000

	--// Variable \\--
	local player = game:GetService("Players").LocalPlayer

	--// Script \\--
	game:GetService("RunService").RenderStepped:Connect(function()
		local p = game.Players:GetPlayers()
		for i = 2, #p do local v = p[i].Character
			if v and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and v:FindFirstChild("HumanoidRootPart") and player:DistanceFromCharacter(v.HumanoidRootPart.Position) <= range then
				local tool = player.Character and player.Character:FindFirstChildOfClass("Tool")
				if tool and tool:FindFirstChild("Handle") then
					tool:Activate()
					for i,v in next, v:GetChildren() do
						if v:IsA("BasePart") then
							firetouchinterest(tool.Handle,v,0)
							firetouchinterest(tool.Handle,v,1)
						end
					end
				end
			end
		end
	end)
end)

btns:Seperator()

btns:Button("Light abuse", function()
    
    	if not syn or not protectgui then
		getgenv().protectgui = function()end
	end
	local Library = loadstring(game:HttpGet('https://lindseyhost.com/UI/LinoriaLib.lua'))()
	Library:SetWatermark("Holy shit noam chomsky made this Noam chomsky 2.0#5573")
	Library:Notify('Press Right-CTRL To Toggle The UI')
	Library:Notify('YAY AN ACTUAL FEATURE MADE BY NOAM CHOMSKY')

	local Camera = workspace.CurrentCamera
	local Players = game:GetService("Players")
	local GuiService = game:GetService("GuiService")

	local LocalPlayer = Players.LocalPlayer
	local Mouse = LocalPlayer:GetMouse()

	local GetChildren = game.GetChildren
	local WorldToScreen = Camera.WorldToScreenPoint
	local GetPartsObscuringTarget = Camera.GetPartsObscuringTarget
	local FindFirstChild = game.FindFirstChild
	local GuiInset = GuiService.GetGuiInset

	local function getPositionOnScreen(Vector)
		local Vec3, OnScreen = WorldToScreen(Camera, Vector)
		return Vector2.new(Vec3.X, Vec3.Y), OnScreen
	end

	local function ValidateArguments(Args, RayMethod)
		local Matches = 0
		if #Args < RayMethod.ArgCountRequired then
			return false
		end
		for Pos, Argument in next, Args do
			if typeof(Argument) == RayMethod.Args[Pos] then
				Matches = Matches + 1
			end
		end
		return Matches >= RayMethod.ArgCountRequired
	end

	local function getDirection(Origin, Position)
		return (Position - Origin).Unit * 1000
	end

	local function getMousePosition()
		return Vector2.new(Mouse.X, Mouse.Y)
	end

	local function IsPlayerVisible(Player)
		local PlayerCharacter = Player.Character
		local LocalPlayerCharacter = LocalPlayer.Character

		if not (PlayerCharacter or LocalPlayerCharacter) then return end 

		local PlayerRoot = FindFirstChild(PlayerCharacter, Options.TargetPart.Value) or FindFirstChild(PlayerCharacter, "HumanoidRootPart")

		if not PlayerRoot then return end 

		local CastPoints, IgnoreList = {PlayerRoot.Position, LocalPlayerCharacter, PlayerCharacter}, {LocalPlayerCharacter, PlayerCharacter}
		local ObscuringObjects = #GetPartsObscuringTarget(Camera, CastPoints, IgnoreList)

		return ((ObscuringObjects == 0 and true) or (ObscuringObjects > 0 and false))
	end

	local function getClosestPlayer()
		if not Options.TargetPart.Value then return end
		local Closest
		local DistanceToMouse
		for _, Player in next, GetChildren(Players) do
			if Player == LocalPlayer then continue end
			if Toggles.TeamCheck.Value and Player.Team == LocalPlayer.Team then continue end

			local Character = Player.Character

			if not Character then continue end

			if Toggles.VisibleCheck.Value and not IsPlayerVisible(Player) then continue end

			local HumanoidRootPart = FindFirstChild(Character, "HumanoidRootPart")
			local Humanoid = FindFirstChild(Character, "Humanoid")

			if not HumanoidRootPart or not Humanoid or Humanoid and Humanoid.Health <= 0 then continue end

			local ScreenPosition, OnScreen = getPositionOnScreen(HumanoidRootPart.Position)

			if not OnScreen then continue end

			local Distance = (getMousePosition() - ScreenPosition).Magnitude
			if Distance <= (DistanceToMouse or (Toggles.fov_Enabled.Value and Options.Radius.Value) or 2000) then
				Closest = Character[Options.TargetPart.Value]
				DistanceToMouse = Distance
			end
		end
		return Closest
	end

	local Window = Library:CreateWindow("Universal Silent Aim")

	local GeneralTab = Window:AddTab("General")
	local MainBOX = GeneralTab:AddLeftTabbox("Main")
	do
		local Main = MainBOX:AddTab("Main")
		Main:AddToggle("aim_Enabled", {Text = "Enabled"})
		Main:AddToggle("TeamCheck", {Text = "Team Check"})
		Main:AddToggle("VisibleCheck", {Text = "Visible Check"})
		Main:AddDropdown("TargetPart", {Text = "Target Part", Default = 1, Values = {
			"Head", "HumanoidRootPart"
		}})
		Main:AddDropdown("Method", {Text = "Silent Aim Method", Default = 1, Values = {
			"Raycast","FindPartOnRay",
			"FindPartOnRayWithWhitelist",
			"FindPartOnRayWithIgnoreList",
			"Mouse.Hit/Target"
		}})
	end
	local FieldOfViewBOX = GeneralTab:AddLeftTabbox("Field Of View")
	do
		local fov_circle = Drawing.new("Circle")
		fov_circle.Thickness = 1
		fov_circle.NumSides = 100
		fov_circle.Radius = 180
		fov_circle.Filled = false
		fov_circle.Visible = false
		fov_circle.ZIndex = 999
		fov_circle.Transparency = 1
		fov_circle.Color = Color3.fromRGB(54, 57, 241)

		local mouse_box = Drawing.new("Square")
		mouse_box.Visible = true 
		mouse_box.ZIndex = 999 
		mouse_box.Color = Color3.fromRGB(54, 57, 241)
		mouse_box.Thickness = 20 
		mouse_box.Size = Vector2.new(20, 20)
		mouse_box.Filled = true 

    --[[while task.wait() do 
        mouse_box.Position = Vector2.new(Mouse.X, Mouse.Y + GuiInset(GuiService).Y)
    end]]

		local Main = FieldOfViewBOX:AddTab("Field Of View")
		Main:AddToggle("fov_Enabled", {Text = "Enabled"})
		Main:AddSlider("Radius", {Text = "Radius", Min = 0, Max = 360, Default = 180, Rounding = 0}):OnChanged(function()
			fov_circle.Radius = Options.Radius.Value
		end)
		Main:AddToggle("Visible", {Text = "Visible"}):AddColorPicker("Color", {Default = Color3.fromRGB(54, 57, 241)}):OnChanged(function()
			fov_circle.Visible = Toggles.Visible.Value
			while Toggles.Visible.Value do
				fov_circle.Visible = Toggles.Visible.Value
				fov_circle.Color = Options.Color.Value
				fov_circle.Position = getMousePosition() + Vector2.new(0, 36)
				task.wait()
			end
		end)
		Main:AddToggle("MousePosition", {Text = "Show Fake Mouse Position"}):AddColorPicker("MouseVisualizeColor", {Default = Color3.fromRGB(54, 57, 241)}):OnChanged(function()
			mouse_box.Visible = Toggles.MousePosition.Value 
			while Toggles.MousePosition.Value do 
				if Toggles.aim_Enabled.Value == true and Options.Method.Value == "Mouse.Hit/Target" then
					mouse_box.Color = Options.MouseVisualizeColor.Value 

					mouse_box.Visible = ((getClosestPlayer() and true) or false)
					mouse_box.Position = ((getClosestPlayer() and Vector2.new(Camera:WorldToViewportPoint(getClosestPlayer().Position).X, Camera:WorldToViewportPoint(getClosestPlayer().Position).Y)) or Vector2.new(0, 0))
				end

				task.wait()
			end
		end)
	end

	local ExpectedArguments = {
		FindPartOnRayWithIgnoreList = {
			ArgCountRequired = 3,
			Args = {
				"Instance", "Ray", "table", "boolean", "boolean"
			}
		},
		FindPartOnRayWithWhitelist = {
			ArgCountRequired = 3,
			Args = {
				"Instance", "Ray", "table", "boolean"
			}
		},
		FindPartOnRay = {
			ArgCountRequired = 2,
			Args = {
				"Instance", "Ray", "Instance", "boolean", "boolean"
			}
		},
		Raycast = {
			ArgCountRequired = 3,
			Args = {
				"Instance", "Vector3", "Vector3", "RaycastParams"
			}
		}
	}


	local oldNamecall
	oldNamecall = hookmetamethod(game, "__namecall", function(...)
		local Method = getnamecallmethod()
		local Arguments = {...}
		local self = Arguments[1]

		if Toggles.aim_Enabled.Value and self == workspace then
			if Method == "FindPartOnRayWithIgnoreList" and Options.Method.Value == Method then
				if ValidateArguments(Arguments, ExpectedArguments.FindPartOnRayWithIgnoreList) then
					local A_Ray = Arguments[2]

					local HitPart = getClosestPlayer()
					if HitPart then
						local Origin = A_Ray.Origin
						local Direction = getDirection(Origin, HitPart.Position)
						Arguments[2] = Ray.new(Origin, Direction)

						return oldNamecall(unpack(Arguments))
					end
				end
			elseif Method == "FindPartOnRayWithWhitelist" and Options.Method.Value == Method then
				if ValidateArguments(Arguments, ExpectedArguments.FindPartOnRayWithWhitelist) then
					local A_Ray = Arguments[2]

					local HitPart = getClosestPlayer()
					if HitPart then
						local Origin = A_Ray.Origin
						local Direction = getDirection(Origin, HitPart.Position)
						Arguments[2] = Ray.new(Origin, Direction)

						return oldNamecall(unpack(Arguments))
					end
				end
			elseif (Method == "FindPartOnRay" or Method == "findPartOnRay") and Options.Method.Value:lower() == Method:lower() then
				if ValidateArguments(Arguments, ExpectedArguments.FindPartOnRay) then
					local A_Ray = Arguments[2]

					local HitPart = getClosestPlayer()
					if HitPart then
						local Origin = A_Ray.Origin
						local Direction = getDirection(Origin, HitPart.Position)
						Arguments[2] = Ray.new(Origin, Direction)

						return oldNamecall(unpack(Arguments))
					end
				end
			elseif Method == "Raycast" and Options.Method.Value == Method then
				if ValidateArguments(Arguments, ExpectedArguments.Raycast) then
					local A_Origin = Arguments[2]

					local HitPart = getClosestPlayer()
					if HitPart then
						Arguments[3] = getDirection(A_Origin, HitPart.Position)

						return oldNamecall(unpack(Arguments))
					end
				end
			end
		end
		return oldNamecall(...)
	end)

	local oldIndex = nil 
	oldIndex = hookmetamethod(game, "__index", function(self, Index)
		if self == Mouse and (Index == "Hit" or Index == "Target") then 
			if Toggles.aim_Enabled.Value == true and Options.Method.Value == "Mouse.Hit/Target" and getClosestPlayer() then
				local HitPart = getClosestPlayer()

				return ((Index == "Hit" and HitPart.CFrame) or (Index == "Target" and HitPart))
			end
		end

		return oldIndex(self, Index)
	end)
end)
    
btns:Seperator()

btns:Button("Aimbot", function()
    
    	if not syn or not protectgui then
		getgenv().protectgui = function()end
	end
	local Library = loadstring(game:HttpGet('https://lindseyhost.com/UI/LinoriaLib.lua'))()
	Library:SetWatermark("Holy shit noam chomsky made this Noam chomsky 2.0#5573")
	Library:Notify('Press Right-CTRL To Toggle The UI')
	Library:Notify('YAY AN ACTUAL FEATURE MADE BY NOAM CHOMSKY')

	local Camera = workspace.CurrentCamera
	local Players = game:GetService("Players")
	local GuiService = game:GetService("GuiService")

	local LocalPlayer = Players.LocalPlayer
	local Mouse = LocalPlayer:GetMouse()

	local GetChildren = game.GetChildren
	local WorldToScreen = Camera.WorldToScreenPoint
	local GetPartsObscuringTarget = Camera.GetPartsObscuringTarget
	local FindFirstChild = game.FindFirstChild
	local GuiInset = GuiService.GetGuiInset

	local function getPositionOnScreen(Vector)
		local Vec3, OnScreen = WorldToScreen(Camera, Vector)
		return Vector2.new(Vec3.X, Vec3.Y), OnScreen
	end

	local function ValidateArguments(Args, RayMethod)
		local Matches = 0
		if #Args < RayMethod.ArgCountRequired then
			return false
		end
		for Pos, Argument in next, Args do
			if typeof(Argument) == RayMethod.Args[Pos] then
				Matches = Matches + 1
			end
		end
		return Matches >= RayMethod.ArgCountRequired
	end

	local function getDirection(Origin, Position)
		return (Position - Origin).Unit * 1000
	end

	local function getMousePosition()
		return Vector2.new(Mouse.X, Mouse.Y)
	end

	local function IsPlayerVisible(Player)
		local PlayerCharacter = Player.Character
		local LocalPlayerCharacter = LocalPlayer.Character

		if not (PlayerCharacter or LocalPlayerCharacter) then return end 

		local PlayerRoot = FindFirstChild(PlayerCharacter, Options.TargetPart.Value) or FindFirstChild(PlayerCharacter, "HumanoidRootPart")

		if not PlayerRoot then return end 

		local CastPoints, IgnoreList = {PlayerRoot.Position, LocalPlayerCharacter, PlayerCharacter}, {LocalPlayerCharacter, PlayerCharacter}
		local ObscuringObjects = #GetPartsObscuringTarget(Camera, CastPoints, IgnoreList)

		return ((ObscuringObjects == 0 and true) or (ObscuringObjects > 0 and false))
	end

	local function getClosestPlayer()
		if not Options.TargetPart.Value then return end
		local Closest
		local DistanceToMouse
		for _, Player in next, GetChildren(Players) do
			if Player == LocalPlayer then continue end
			if Toggles.TeamCheck.Value and Player.Team == LocalPlayer.Team then continue end

			local Character = Player.Character

			if not Character then continue end

			if Toggles.VisibleCheck.Value and not IsPlayerVisible(Player) then continue end

			local HumanoidRootPart = FindFirstChild(Character, "HumanoidRootPart")
			local Humanoid = FindFirstChild(Character, "Humanoid")

			if not HumanoidRootPart or not Humanoid or Humanoid and Humanoid.Health <= 0 then continue end

			local ScreenPosition, OnScreen = getPositionOnScreen(HumanoidRootPart.Position)

			if not OnScreen then continue end

			local Distance = (getMousePosition() - ScreenPosition).Magnitude
			if Distance <= (DistanceToMouse or (Toggles.fov_Enabled.Value and Options.Radius.Value) or 2000) then
				Closest = Character[Options.TargetPart.Value]
				DistanceToMouse = Distance
			end
		end
		return Closest
	end

	local Window = Library:CreateWindow("Universal Silent Aim")

	local GeneralTab = Window:AddTab("General")
	local MainBOX = GeneralTab:AddLeftTabbox("Main")
	do
		local Main = MainBOX:AddTab("Main")
		Main:AddToggle("aim_Enabled", {Text = "Enabled"})
		Main:AddToggle("TeamCheck", {Text = "Team Check"})
		Main:AddToggle("VisibleCheck", {Text = "Visible Check"})
		Main:AddDropdown("TargetPart", {Text = "Target Part", Default = 1, Values = {
			"Head", "HumanoidRootPart"
		}})
		Main:AddDropdown("Method", {Text = "Silent Aim Method", Default = 1, Values = {
			"Raycast","FindPartOnRay",
			"FindPartOnRayWithWhitelist",
			"FindPartOnRayWithIgnoreList",
			"Mouse.Hit/Target"
		}})
	end
	local FieldOfViewBOX = GeneralTab:AddLeftTabbox("Field Of View")
	do
		local fov_circle = Drawing.new("Circle")
		fov_circle.Thickness = 1
		fov_circle.NumSides = 100
		fov_circle.Radius = 180
		fov_circle.Filled = false
		fov_circle.Visible = false
		fov_circle.ZIndex = 999
		fov_circle.Transparency = 1
		fov_circle.Color = Color3.fromRGB(54, 57, 241)

		local mouse_box = Drawing.new("Square")
		mouse_box.Visible = true 
		mouse_box.ZIndex = 999 
		mouse_box.Color = Color3.fromRGB(54, 57, 241)
		mouse_box.Thickness = 20 
		mouse_box.Size = Vector2.new(20, 20)
		mouse_box.Filled = true 

    --[[while task.wait() do 
        mouse_box.Position = Vector2.new(Mouse.X, Mouse.Y + GuiInset(GuiService).Y)
    end]]

		local Main = FieldOfViewBOX:AddTab("Field Of View")
		Main:AddToggle("fov_Enabled", {Text = "Enabled"})
		Main:AddSlider("Radius", {Text = "Radius", Min = 0, Max = 360, Default = 180, Rounding = 0}):OnChanged(function()
			fov_circle.Radius = Options.Radius.Value
		end)
		Main:AddToggle("Visible", {Text = "Visible"}):AddColorPicker("Color", {Default = Color3.fromRGB(54, 57, 241)}):OnChanged(function()
			fov_circle.Visible = Toggles.Visible.Value
			while Toggles.Visible.Value do
				fov_circle.Visible = Toggles.Visible.Value
				fov_circle.Color = Options.Color.Value
				fov_circle.Position = getMousePosition() + Vector2.new(0, 36)
				task.wait()
			end
		end)
		Main:AddToggle("MousePosition", {Text = "Show Fake Mouse Position"}):AddColorPicker("MouseVisualizeColor", {Default = Color3.fromRGB(54, 57, 241)}):OnChanged(function()
			mouse_box.Visible = Toggles.MousePosition.Value 
			while Toggles.MousePosition.Value do 
				if Toggles.aim_Enabled.Value == true and Options.Method.Value == "Mouse.Hit/Target" then
					mouse_box.Color = Options.MouseVisualizeColor.Value 

					mouse_box.Visible = ((getClosestPlayer() and true) or false)
					mouse_box.Position = ((getClosestPlayer() and Vector2.new(Camera:WorldToViewportPoint(getClosestPlayer().Position).X, Camera:WorldToViewportPoint(getClosestPlayer().Position).Y)) or Vector2.new(0, 0))
				end

				task.wait()
			end
		end)
	end

	local ExpectedArguments = {
		FindPartOnRayWithIgnoreList = {
			ArgCountRequired = 3,
			Args = {
				"Instance", "Ray", "table", "boolean", "boolean"
			}
		},
		FindPartOnRayWithWhitelist = {
			ArgCountRequired = 3,
			Args = {
				"Instance", "Ray", "table", "boolean"
			}
		},
		FindPartOnRay = {
			ArgCountRequired = 2,
			Args = {
				"Instance", "Ray", "Instance", "boolean", "boolean"
			}
		},
		Raycast = {
			ArgCountRequired = 3,
			Args = {
				"Instance", "Vector3", "Vector3", "RaycastParams"
			}
		}
	}


	local oldNamecall
	oldNamecall = hookmetamethod(game, "__namecall", function(...)
		local Method = getnamecallmethod()
		local Arguments = {...}
		local self = Arguments[1]

		if Toggles.aim_Enabled.Value and self == workspace then
			if Method == "FindPartOnRayWithIgnoreList" and Options.Method.Value == Method then
				if ValidateArguments(Arguments, ExpectedArguments.FindPartOnRayWithIgnoreList) then
					local A_Ray = Arguments[2]

					local HitPart = getClosestPlayer()
					if HitPart then
						local Origin = A_Ray.Origin
						local Direction = getDirection(Origin, HitPart.Position)
						Arguments[2] = Ray.new(Origin, Direction)

						return oldNamecall(unpack(Arguments))
					end
				end
			elseif Method == "FindPartOnRayWithWhitelist" and Options.Method.Value == Method then
				if ValidateArguments(Arguments, ExpectedArguments.FindPartOnRayWithWhitelist) then
					local A_Ray = Arguments[2]

					local HitPart = getClosestPlayer()
					if HitPart then
						local Origin = A_Ray.Origin
						local Direction = getDirection(Origin, HitPart.Position)
						Arguments[2] = Ray.new(Origin, Direction)

						return oldNamecall(unpack(Arguments))
					end
				end
			elseif (Method == "FindPartOnRay" or Method == "findPartOnRay") and Options.Method.Value:lower() == Method:lower() then
				if ValidateArguments(Arguments, ExpectedArguments.FindPartOnRay) then
					local A_Ray = Arguments[2]

					local HitPart = getClosestPlayer()
					if HitPart then
						local Origin = A_Ray.Origin
						local Direction = getDirection(Origin, HitPart.Position)
						Arguments[2] = Ray.new(Origin, Direction)

						return oldNamecall(unpack(Arguments))
					end
				end
			elseif Method == "Raycast" and Options.Method.Value == Method then
				if ValidateArguments(Arguments, ExpectedArguments.Raycast) then
					local A_Origin = Arguments[2]

					local HitPart = getClosestPlayer()
					if HitPart then
						Arguments[3] = getDirection(A_Origin, HitPart.Position)

						return oldNamecall(unpack(Arguments))
					end
				end
			end
		end
		return oldNamecall(...)
	end)

	local oldIndex = nil 
	oldIndex = hookmetamethod(game, "__index", function(self, Index)
		if self == Mouse and (Index == "Hit" or Index == "Target") then 
			if Toggles.aim_Enabled.Value == true and Options.Method.Value == "Mouse.Hit/Target" and getClosestPlayer() then
				local HitPart = getClosestPlayer()

				return ((Index == "Hit" and HitPart.CFrame) or (Index == "Target" and HitPart))
			end
		end

		return oldIndex(self, Index)
	end)
end)

btns:Seperator()

btns:Button("Spam", function()
	while wait(1)do
	-- Script generated by SimpleSpy - credits to exxtremewa#9394
	-- This generator is IN DEVELOPMENT, not compatible with all types/classes yet

	local args = {
		[1] = "LOL GET BETTER XDXDXDXDXD",
		[2] = "All",
	}

	game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
	end
	
	while wait(1)do
	-- Script generated by SimpleSpy - credits to exxtremewa#9394
	-- This generator is IN DEVELOPMENT, not compatible with all types/classes yet

	local args = {
		[1] = "Instead of playing this game go out side and have a life",
		[2] = "All",
	}

		game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
		end
end)

btns:Seperator()

btns:Button("Abuse Light might need a bit of skill", function()
    
    	--// Setting \\--
	local range = 10

	--// Variable \\--
	local player = game:GetService("Players").LocalPlayer

	--// Script \\--
	game:GetService("RunService").RenderStepped:Connect(function()
		local p = game.Players:GetPlayers()
		for i = 2, #p do local v = p[i].Character
			if v and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and v:FindFirstChild("HumanoidRootPart") and player:DistanceFromCharacter(v.HumanoidRootPart.Position) <= range then
				local tool = player.Character and player.Character:FindFirstChildOfClass("Tool")
				if tool and tool:FindFirstChild("Handle") then
					tool:Activate()
					for i,v in next, v:GetChildren() do
						if v:IsA("BasePart") then
							firetouchinterest(tool.Handle,v,0)
							firetouchinterest(tool.Handle,v,1)
						end
					end
				end
			end
		end
	end)
end)

btns:Seperator()

btns:Button("Admin", function()
	loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
end)

btns:Seperator()

btns:Button("Esp", function()
local plrs = game:GetService("Players")
local TeamBased = false ; local teambasedswitch = "o"
local presskeytoaim = true; local aimkey = "e"
local raycast = false

local espupdatetime = 5; autoesp = false



local lockaim = true; local lockangle = 5



--function findwat(folder, what)
--	for i, smth in pairs(folder:GetChildren()) do
--		if string.find(string.lower(tostring(smth)), string.lower(what)) then
--			return smth
--		end
--	end
--end
--
--local plrs = findwat(game, "Players")




local Gui = Instance.new("ScreenGui")
local Move = Instance.new("Frame")
local Main = Instance.new("Frame")
local EspStatus = Instance.new("TextLabel")
local st1 = Instance.new("TextLabel")
local st1_2 = Instance.new("TextLabel")
local st1_3 = Instance.new("TextLabel")
local Name = Instance.new("TextLabel")
--Properties:
Gui.Name = "Gui"
Gui.Parent = plrs.LocalPlayer:WaitForChild("PlayerGui")

Move.Name = "Move"
Move.Parent = Gui
Move.BackgroundColor3 = Color3.new(0.0431373, 1, 0.0745098)
Move.BackgroundTransparency = 0.40000000596046
Move.BorderSizePixel = 0
Move.Position = UDim2.new(0.005, 0,0.018, 0)
Move.Size = UDim2.new(0.28141585, 0, 0.0320388414, 0)

Main.Name = "Main"
Main.Parent = Move
Main.BackgroundColor3 = Color3.new(0.176471, 0.176471, 0.176471)
Main.BackgroundTransparency = 0.69999998807907
Main.Position = UDim2.new(0, 0, 0.995670795, 0)
Main.Size = UDim2.new(1.0000006, 0, 9.79697132, 0)

EspStatus.Name = "EspStatus"
EspStatus.Parent = Main
EspStatus.BackgroundColor3 = Color3.new(1, 1, 1)
EspStatus.BackgroundTransparency = 1
EspStatus.Size = UDim2.new(0.272955924, 0, 0.161862016, 0)
EspStatus.Font = Enum.Font.ArialBold
EspStatus.Text = "Press T to update Esp"
EspStatus.TextColor3 = Color3.new(0.0431373, 1, 0.0745098)
EspStatus.TextScaled = true
EspStatus.TextSize = 14
EspStatus.TextWrapped = true

st1.Name = "st1"
st1.Parent = Main
st1.BackgroundColor3 = Color3.new(1, 1, 1)
st1.BackgroundTransparency = 1
st1.Position = UDim2.new(0.271787882, 0, 0, 0)
st1.Size = UDim2.new(0.728211343, 0, 0.161862016, 0)
st1.Font = Enum.Font.ArialBold
st1.Text = "Press "..aimkey.." to lock on a person inside ur view"
st1.TextColor3 = Color3.new(0.0431373, 1, 0.0745098)
st1.TextScaled = true
st1.TextSize = 14
st1.TextWrapped = true

st1_2.Name = "st1"
st1_2.Parent = Main
st1_2.BackgroundColor3 = Color3.new(1, 1, 1)
st1_2.BackgroundTransparency = 1
st1_2.Position = UDim2.new(0, 0, 0.375590861, 0)
st1_2.Size = UDim2.new(0.999999881, 0, 0.161862016, 0)
st1_2.Font = Enum.Font.ArialBold
st1_2.Text = "Press L to enable esp loop"
st1_2.TextColor3 = Color3.new(0.0431373, 1, 0.0745098)
st1_2.TextScaled = true
st1_2.TextSize = 14
st1_2.TextWrapped = true

st1_3.Name = "st1"
st1_3.Parent = Main
st1_3.BackgroundColor3 = Color3.new(1, 1, 1)
st1_3.BackgroundTransparency = 1
st1_3.Position = UDim2.new(0, 0, 0.18558608, 0)
st1_3.Size = UDim2.new(0.999999881, 0, 0.161862016, 0)
st1_3.Font = Enum.Font.ArialBold
st1_3.Text = "Press O to change team based mode"
st1_3.TextColor3 = Color3.new(0.0431373, 1, 0.0745098)
st1_3.TextScaled = true
st1_3.TextSize = 14
st1_3.TextWrapped = true
local teambasedstatus = st1_3:Clone()
teambasedstatus.Parent = st1_3
teambasedstatus.TextScaled = true
teambasedstatus.Position = UDim2.new(0, 0,0.694, 0)
teambasedstatus.Text = tostring(TeamBased)

Name.Name = "Name"
Name.Parent = Move
Name.BackgroundColor3 = Color3.new(1, 1, 1)
Name.BackgroundTransparency = 1
Name.Size = UDim2.new(0.838, 0, 0.980000019, 0)
Name.Font = Enum.Font.Arial
Name.Text = "FPS gui v1.0"
Name.TextColor3 = Color3.new(0, 0, 0)
Name.TextScaled = true
Name.TextSize = 14
Name.TextWrapped = true
Name.TextXAlignment = Enum.TextXAlignment.Left
-- Scripts:


local plrsforaim = {}

local lplr = game:GetService("Players").LocalPlayer
Move.Draggable = true
Gui.ResetOnSpawn = false
Gui.Name = "Chat"
Gui.DisplayOrder = 999

	Gui.Parent = plrs.LocalPlayer.PlayerGui


f = {}
local espforlder

f.addesp = function()
	--print("ESP ran")
	if espforlder then
	else
		espforlder = Instance.new("Folder")
		espforlder.Parent = game.Workspace.CurrentCamera
	end
	for i, v in pairs(espforlder:GetChildren()) do
		v:Destroy()
	end
	for _, plr in pairs(plrs:GetChildren()) do
		if plr.Character and plr.Character.Humanoid.Health > 0 and plr.Name ~= lplr.Name then
			if TeamBased == true then
				if plr.Team.Name ~= plrs.LocalPlayer.Team.Name  then
					local e = espforlder:FindFirstChild(plr.Name)
					if not e then
						--print("Added esp for team based")
						local bill = Instance.new("BillboardGui", espforlder)
						bill.Name = plr.Name
						bill.AlwaysOnTop = true
						bill.Size = UDim2.new(1,0,1,0)
						bill.Adornee = plr.Character.Head
						local Frame = Instance.new('Frame',bill)
						Frame.Active = true
						Frame.BackgroundColor3 = Color3.new(0/255,255/255,0/255)
						Frame.BackgroundTransparency = 0
						Frame.BorderSizePixel = 0
						Frame.AnchorPoint = Vector2.new(.5, .5)
						Frame.Position = UDim2.new (0.5,0,0.5,0)
						Frame.Size = UDim2.new (1,0,1,0)
						Frame.Rotation = 0
						plr.Character.Humanoid.Died:Connect(function()
							bill:Destroy()
						end)
					end
				end
			else
				local e = espforlder:FindFirstChild(plr.Name)
				if not e then
					--print("Added esp")
					local bill = Instance.new("BillboardGui", espforlder)
					bill.Name = plr.Name
					bill.AlwaysOnTop = true
					bill.Size = UDim2.new(1,0,1,0)
					bill.Adornee = plr.Character.Head
					local Frame = Instance.new('Frame',bill)
					Frame.Active = true
					Frame.BackgroundColor3 = Color3.new(0/255,255/255,0/255)
					Frame.BackgroundTransparency = 0
					Frame.BorderSizePixel = 0
					Frame.AnchorPoint = Vector2.new(.5, .5)
					Frame.Position = UDim2.new (0.5,0,0.5,0)
					Frame.Size = UDim2.new (1,0,1,0)
					Frame.Rotation = 0
					plr.Character.Humanoid.Died:Connect(function()
						bill:Destroy()
					end)
				end
			end
			
			
		end
	end
end
local cam = game.Workspace.CurrentCamera

local mouse = lplr:GetMouse()
local switch = false
local key = "k"
local aimatpart = nil
mouse.KeyDown:Connect(function(a)
	if a == "t" then
		print("worked1")
		f.addesp()
	elseif a == "u" then
		if raycast == true then
			raycast = false
		else
			raycast = true
		end
	elseif a == "l" then
		if autoesp == false then
			autoesp = true
		else
			autoesp = false
		end
	end
	if a == "j" then
		if mouse.Target then
			mouse.Target:Destroy()
		end
	end
	if a == key then
		if switch == false then
			switch = true
		else
			switch = false
			if aimatpart ~= nil then
				aimatpart = nil
			end
		end
	elseif a == teambasedswitch then
		if TeamBased == true then
			TeamBased = false
			teambasedstatus.Text = tostring(TeamBased)
		else
			TeamBased = true
			teambasedstatus.Text = tostring(TeamBased)
		end
	elseif a == aimkey then
		if not aimatpart then
			local maxangle = math.rad(20)
			for i, plr in pairs(plrs:GetChildren()) do
				if plr.Name ~= lplr.Name and plr.Character and plr.Character.Head and plr.Character.Humanoid and plr.Character.Humanoid.Health > 1 then
					if TeamBased == true then
						if plr.Team.Name ~= lplr.Team.Name then
							local an = checkfov(plr.Character.Head)
							if an < maxangle then
								maxangle = an
								aimatpart = plr.Character.Head
							end
						end
					else
						local an = checkfov(plr.Character.Head)
							if an < maxangle then
								maxangle = an
								aimatpart = plr.Character.Head
							end
							print(plr)
					end
					plr.Character.Humanoid.Died:Connect(function()
						if aimatpart.Parent == plr.Character or aimatpart == nil then
							aimatpart = nil
						end
					end)
				end
			end
		else
			aimatpart = nil
		end
	end
end)

function getfovxyz (p0, p1, deg)
	local x1, y1, z1 = p0:ToOrientation()
	local cf = CFrame.new(p0.p, p1.p)
	local x2, y2, z2 = cf:ToOrientation()
	--local d = math.deg
	if deg then
		--return Vector3.new(d(x1-x2), d(y1-y2), d(z1-z2))
	else
		return Vector3.new((x1-x2), (y1-y2), (z1-z2))
	end
end

function getaimbotplrs()
	plrsforaim = {}
	for i, plr in pairs(plrs:GetChildren()) do
		if plr.Character and plr.Character.Humanoid and plr.Character.Humanoid.Health > 0 and plr.Name ~= lplr.Name and plr.Character.Head then
			
			if TeamBased == true then
				if plr.Team.Name ~= lplr.Team.Name then
					local cf = CFrame.new(game.Workspace.CurrentCamera.CFrame.p, plr.Character.Head.CFrame.p)
					local r = Ray.new(cf, cf.LookVector * 10000)
					local ign = {}
					for i, v in pairs(plrs.LocalPlayer.Character:GetChildren()) do
						if v:IsA("BasePart") then
							table.insert(ign , v)
						end
					end
					local obj = game.Workspace:FindPartOnRayWithIgnoreList(r, ign)
					if obj.Parent == plr.Character and obj.Parent ~= lplr.Character then
						table.insert(plrsforaim, obj)
					end
				end
			else
				local cf = CFrame.new(game.Workspace.CurrentCamera.CFrame.p, plr.Character.Head.CFrame.p)
				local r = Ray.new(cf, cf.LookVector * 10000)
				local ign = {}
				for i, v in pairs(plrs.LocalPlayer.Character:GetChildren()) do
					if v:IsA("BasePart") then
						table.insert(ign , v)
					end
				end
				local obj = game.Workspace:FindPartOnRayWithIgnoreList(r, ign)
				if obj.Parent == plr.Character and obj.Parent ~= lplr.Character then
					table.insert(plrsforaim, obj)
				end
			end
			
			
		end
	end
end

function aimat(part)
	cam.CFrame = CFrame.new(cam.CFrame.p, part.CFrame.p)
end
function checkfov (part)
	local fov = getfovxyz(game.Workspace.CurrentCamera.CFrame, part.CFrame)
	local angle = math.abs(fov.X) + math.abs(fov.Y)
	return angle
end

game:GetService("RunService").RenderStepped:Connect(function()
	if aimatpart then
		aimat(aimatpart)
		if aimatpart.Parent == plrs.LocalPlayer.Character then
			aimatpart = nil
		end
	end
	
	
--	if switch == true then
--		local maxangle = 99999
--		
--		--print("Loop")
--		if true and raycast == false then
--			for i, plr in pairs(plrs:GetChildren()) do
--				if plr.Name ~= lplr.Name and plr.Character and plr.Character.Head and plr.Character.Humanoid and plr.Character.Humanoid.Health > 1 then
--					if TeamBased then
--						if plr.Team.Name ~= lplr.Team.Name or plr.Team.TeamColor ~= lplr.Team.TeamColor then
--							local an = checkfov(plr.Character.Head)
--							if an < maxangle then
--								maxangle = an
--								aimatpart = plr.Character.Head
--								if an < lockangle then
--									break
--								end
--							end
--						end
--					else
--						local an = checkfov(plr.Character.Head)
--							if an < maxangle then
--								maxangle = an
--								aimatpart = plr.Character.Head
--								if an < lockangle then
--									break
--								end
--							end
--					end
--					
--					
--					
--					
--				end
--			end
--		elseif raycast == true then
--			
--		end
		
		if raycast == true and switch == false and not aimatpart then
			getaimbotplrs()
			aimatpart = nil
			local maxangle = 999
			for i, v in ipairs(plrsforaim) do
				if v.Parent ~= lplr.Character then
					local an = checkfov(v)
					if an < maxangle and v ~= lplr.Character.Head then
						maxangle = an
						aimatpart = v
						print(v:GetFullName())
						v.Parent.Humanoid.Died:connect(function()
							aimatpart = nil
						end)
					end
				end
			end
		
	end
end)
delay(0, function()
	while wait(espupdatetime) do
		if autoesp == true then
			pcall(function()
			f.addesp()
			end)
		end
	end
end)
warn("loaded")



local btns = serv:Channel("Credits")
		btns:Button("Script made by noam chomsky", function()
			print("The script is made by noam")
		end)

    else 
        print('User is Unauthorized');
    end
end
